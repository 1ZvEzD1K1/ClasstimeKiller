{"version":3,"sources":["redux/actions/show_quizzes.js","redux/reducers/quizzes/quizzes.js","redux/actions/results.js","redux/reducers/results/results.js","redux/actions/save_answers.js","redux/reducers/answers/answer.js","redux/actions/load_quiz_list.js","redux/reducers/quiz_list/quiz_list.js","redux/actions/add_quizze.js","redux/reducers/addedQuizes/addedQuizes.js","redux/actions/add_user.js","redux/reducers/add_user/add_user.js","redux/actions/add_test.js","redux/reducers/add_test/index.js","redux/reducers/index.js","redux/sagas/quizzes.js","redux/actions/send_answers.js","redux/sagas/answers.js","redux/sagas/load_quizlist.js","redux/sessionStorage.js","redux/sagas/addTest.js","redux/sagas/authUser.js","redux/sagas/results.js","redux/store.js","components/Header/Header.js","components/styles/image.png","components/Loader.js","navigation/Screens.js/HomeScreen.js","components/ListQuiz.js","components/Question.js","navigation/Screens.js/Quiz.js","components/Result/Result.js","components/ErrorComponent/Error.js","navigation/Screens.js/ResultScreen/ResultsScreen.js","navigation/Screens.js/UserScreen.js","components/Form/Choice.js","components/Form/Question.js","navigation/Screens.js/AddQuizScreen.js","navigation/Screens.js/TestDoneScreen/TestDoneScreen.js","navigation/MainNavigator.js","App.js","index.js"],"names":["SHOW_QUIZZES","LOAD_QUIZZES","SET_SELECTED","SET_DONE","CLEAR_QUIZ","LOAD_QUIZZES_ERROR","clearQuiz","type","loadQuizzesError","payload","initialState","status","message","quiz","questions","LOAD_RESULTS","LOAD_RESULTS_SUCCESS","LOAD_RESULTS_ERROR","loadResultsError","results","SAVE_ANSWERS","name","answers","LOAD_QUIZ_LIST","SHOW_QUIZ_LIST","LOAD_QUIZ_LIST_ERROR","showQuizList","ADD_NEW_QUIZ","addedQuizzes","state","action","ADD_USER","DELETE_USER","LOGIN_SUCCESS","LOGOUT_SUCCESS","ERROR","req_error","error","loggedIn","user","editing_key","id","add_user","data","dude","ADD_TEST","ADD_TEST_SUCCESS","ADD_TEST_ERROR","RESET_TEST","add_test_error","combineReducers","quizzes","newArray","map","item","newChoices","choices","i","isSelected","isDone","newObj","found","find","element","question","index","indexOf","newobj","newState","foundQ","indexQ","foundA","answ","indexA","is_multiple_choice","console","log","newAnswers","push","answer","quiz_list","addedQuizes","add_test","workerLoadData","watchLoadData","fetchData","p","Axios","get","call","put","takeEvery","SEND_ANSWERS","workerSendData","watchSendData","sendAnswers","obj","post","reqObj","dude_id","question_id","choices_id","filter","watchLoadQuizList","watchSendNewTest","sendTest","axios","method","url","res","workerLogin","watchLogin","workerLogout","watchLogout","login","req","logout","key","watchLoadResults","sagaMiddleware","createSagaMiddleware","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","rootReducer","compose","applyMiddleware","run","subscribe","stringify","setItem","saveState","getState","Header","takeState","useState","header","setHeader","overlay","setOverlay","useSelector","className","to","class","onClick","Loader","src","img","React","memo","HomeScreen","dispatch","useDispatch","input","setInput","history","useHistory","privat_input","setPrivat_input","useEffect","value","onChange","e","target","placeholder","onKeyPress","code","test","length","quiz_name","toLowerCase","trim","qz","questions_count","ListQuiz","handleSelect","selectedQuestion","wording","href","Question","text","imageUrl","multiple","handleSelectItem","checked","width","picture","disabled","htmlFor","preventDefault","document","getElementsByClassName","classList","toggle","remove","useContext","Context","useParams","setSelectedQuestion","selectedAnswers","setSelectedAnswers","image","Result","pass_date","rating","Date","toString","ErrorComponent","style","border","color","ResultsScreen","userLogged","delete_user","UserScreen","ref","useRef","seterror","submit","current","Choice","choise_id","for","QuestionComponent","addAnswers","setImage","setId","setKey","selectedFile","formdata","FormData","append","headers","then","catch","sendImages","files","rows","el","AddQuizScreen","test_status","choises","isCorect","array","setArray","prevArray","elQ","n","inputs","querySelectorAll","Array","from","forEach","armel","split","parseInt","TestDoneScreen","createContext","MainNavigator","Provider","exact","path","App","onRender","phase","actualTime","baseTime","startTime","commitTime","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e22eb49a.chunk.js","sourcesContent":["export const SHOW_QUIZZES = \"QUIZ/SHOW_QUIZZES\";\r\nexport const LOAD_QUIZZES = \"QUIZ/LOAD_QUIZZES\";\r\nexport const SET_SELECTED = \"QUIZ/SET_SELECTED\";\r\nexport const SET_DONE = \"QUIZ/SET_DONE\";\r\nexport const CLEAR_QUIZ = \"QUIZ/CLEAR_QUIZ\";\r\nexport const LOAD_QUIZZES_ERROR = \"QUIZ/LOAD_QUIZZES_ERROR\";\r\n\r\nexport const clearQuiz = () => {\r\n  return {\r\n    type: CLEAR_QUIZ,\r\n  };\r\n};\r\n\r\nexport const setSelected = (payload) => {\r\n  return {\r\n    type: SET_SELECTED,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setDone = (payload) => {\r\n  return {\r\n    type: SET_DONE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const showQuizzes = (payload) => {\r\n  return {\r\n    type: SHOW_QUIZZES,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const loadQuizzes = (payload) => {\r\n  return {\r\n    type: LOAD_QUIZZES,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const loadQuizzesError = (payload) => {\r\n  return {\r\n    type: LOAD_QUIZZES_ERROR,\r\n    payload,\r\n  };\r\n};\r\n","import {\r\n  SHOW_QUIZZES,\r\n  SET_SELECTED,\r\n  SET_DONE,\r\n  CLEAR_QUIZ,\r\n  LOAD_QUIZZES_ERROR,\r\n} from \"../../actions/show_quizzes\";\r\n\r\nconst initialState = {\r\n  status: null,\r\n  message: null,\r\n  quiz: {},\r\n  questions: [],\r\n};\r\n// eslint-disable-next-line\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CLEAR_QUIZ:\r\n      return { ...initialState };\r\n    case SHOW_QUIZZES:\r\n      const newArray = action.payload.data.questions.map((item) => {\r\n        let newChoices = item.choices.map((i) => ({ ...i, isSelected: false }));\r\n        item.choices = newChoices;\r\n        item.isDone = false;\r\n        return item;\r\n      });\r\n      const newObj = {\r\n        status: action.payload.status,\r\n        questions: newArray,\r\n        quiz: action.payload.data.quiz,\r\n      };\r\n      return newObj;\r\n    case SET_DONE:\r\n      ///TODO REFUCKTOR\r\n      const found = state.questions.find(\r\n        (element) => element.question.id === action.payload\r\n      );\r\n      const index = state.questions.indexOf(found);\r\n      const newobj = { ...state };\r\n      newobj.questions[index].isDone = true;\r\n\r\n      return { ...newobj };\r\n    case SET_SELECTED:\r\n      ///TODO REFUCKTOR\r\n      const newState = { ...state };\r\n      const foundQ = newState.questions.find(\r\n        (element) => element.question.id === action.payload.id\r\n      );\r\n      const indexQ = newState.questions.indexOf(foundQ);\r\n      //newState.questions[indexQ].choices.map((i) => );\r\n      const foundA = newState.questions[indexQ].choices.find((element) => {\r\n        return element.id === action.payload.answ;\r\n      });\r\n      const indexA = newState.questions[indexQ].choices.indexOf(foundA);\r\n      if (!newState.questions[indexQ].question.is_multiple_choice) {\r\n        let newChoices = newState.questions[indexQ].choices.map((i) => ({\r\n          ...i,\r\n          isSelected: false,\r\n        }));\r\n\r\n        newState.questions[indexQ].choices = newChoices;\r\n      }\r\n\r\n      newState.questions[indexQ].choices[indexA].isSelected = !newState\r\n        .questions[indexQ].choices[indexA].isSelected;\r\n      return { ...newState };\r\n    case LOAD_QUIZZES_ERROR:\r\n      return { ...initialState, status: 404, message: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const LOAD_RESULTS = \"RESULT/LOAD_RESULTS\";\r\nexport const LOAD_RESULTS_SUCCESS = \"RESULT/LOAD_RESULTS_SUCCESS\";\r\nexport const LOAD_RESULTS_ERROR = \"RESULT/LOAD_RESULTS_ERROR\";\r\nexport const loadResults = (payload) => {\r\n  return {\r\n    type: LOAD_RESULTS,\r\n    payload,\r\n  };\r\n};\r\nexport const loadResultsSuccess = (payload) => {\r\n  return {\r\n    type: LOAD_RESULTS_SUCCESS,\r\n    payload,\r\n  };\r\n};\r\nexport const loadResultsError = (payload) => {\r\n  //console.log(payload);\r\n  return {\r\n    type: LOAD_RESULTS_ERROR,\r\n    payload,\r\n  };\r\n};\r\n","import {\r\n  LOAD_RESULTS_ERROR,\r\n  LOAD_RESULTS_SUCCESS,\r\n} from \"../../actions/results\";\r\n\r\nconst initialState = {\r\n  status: null,\r\n  results: [],\r\n  message: \"\",\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_RESULTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        results: [...action.payload.data.dude.results],\r\n        status: 200,\r\n      };\r\n    case LOAD_RESULTS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        message: action.payload.message,\r\n        status: 400,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SAVE_ANSWERS = \"ANSWERS/SAVE_ANSWERS\";\r\n\r\nexport const saveAnswers = (payload) => {\r\n  return {\r\n    type: SAVE_ANSWERS,\r\n    payload,\r\n  };\r\n};\r\n","import { SAVE_ANSWERS } from \"../../actions/save_answers\";\r\nimport {} from \"../../actions/show_quizzes\";\r\n\r\nconst initialState = {\r\n  name: null,\r\n  answers: [],\r\n};\r\n// eslint-disable-next-line\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SAVE_ANSWERS:\r\n      const newAnswers = [...state.answers];\r\n      newAnswers.push(action.payload.answer);\r\n      return {\r\n        name: action.payload.name,\r\n        answers: newAnswers,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const LOAD_QUIZ_LIST = \"QUIZ/LOAD_QUIZ_LIST\";\r\nexport const SHOW_QUIZ_LIST = \"QUIZ/SHOW_QUIZ_LIST\";\r\nexport const LOAD_QUIZ_LIST_ERROR = \"QUIZ/LOAD_QUIZ_LIST_ERROR\";\r\n\r\nexport const showQuizList = (payload) => {\r\n  return {\r\n    type: SHOW_QUIZ_LIST,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const loadQuizList = () => {\r\n  return {\r\n    type: LOAD_QUIZ_LIST,\r\n  };\r\n};\r\n\r\nexport const loadQuizListError = (payload) => {\r\n  return {\r\n    type: LOAD_QUIZ_LIST_ERROR,\r\n    payload,\r\n  };\r\n};\r\n","import {\r\n  LOAD_QUIZ_LIST_ERROR,\r\n  SHOW_QUIZ_LIST,\r\n} from \"../../actions/load_quiz_list\";\r\n\r\nconst initialState = { status: null, message: null };\r\n// eslint-disable-next-line\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_QUIZ_LIST:\r\n      return { ...state, ...action.payload };\r\n    case LOAD_QUIZ_LIST_ERROR:\r\n      // console.log(action.payload);\r\n      return {\r\n        status: action.payload.status,\r\n        message: action.payload.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_NEW_QUIZ = \"QUIZ/ADD_NEW_QUIZ\"; \r\n\r\nexport const addedQuiz = (data) => {\r\n    return {\r\n      type: ADD_NEW_QUIZ,\r\n      payload: data,\r\n    };\r\n  };","import { ADD_NEW_QUIZ } from \"../../actions/add_quizze\";\r\n\r\nconst addedQuizzes = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ADD_NEW_QUIZ:\r\n      // console.log(action.payload);\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default addedQuizzes;\r\n","export const ADD_USER = \"USER/ADD_USER\";\r\nexport function add_user(user) {\r\n  return {\r\n    type: ADD_USER,\r\n    payload: user,\r\n  };\r\n}\r\nexport const DELETE_USER = \"USER/DELETE_USER\";\r\nexport function delete_user(user) {\r\n  return {\r\n    type: DELETE_USER,\r\n    payload: user,\r\n  };\r\n}\r\nexport const LOGIN_SUCCESS = \"USER/LOGIN_SUCCESS\";\r\nexport function login_success(data) {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport const LOGOUT_SUCCESS = \"USER/LOGOUT_SUCCESS\";\r\nexport function logout_success(data) {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\nexport const ERROR = \"USER/ERROR\";\r\nexport function req_error(error) {\r\n  return {\r\n    type: ERROR,\r\n    payload: error,\r\n  };\r\n}\r\n","import {\r\n  ADD_USER,\r\n  ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n} from \"../../actions/add_user\";\r\n\r\nconst initialState = {\r\n  loggedIn: false,\r\n  user: {\r\n    editing_key: \"\",\r\n    id: \"\",\r\n    name: \"\",\r\n  },\r\n  status: null,\r\n  message: null,\r\n};\r\n//eslint-disable-next-line\r\nconst add_user = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        user: { ...action.payload.data.dude },\r\n        status: 200,\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        user: {\r\n          editing_key: \"\",\r\n          id: \"\",\r\n          name: \"\",\r\n        },\r\n        status: 200,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        message: action.payload.message,\r\n        status: 400,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default add_user;\r\n","export const ADD_TEST = \"TEST/ADD_TEST\";\r\nexport const ADD_TEST_SUCCESS = \"TEST/ADD_TEST_SUCCESS\";\r\nexport const ADD_TEST_ERROR = \"TEST/ADD_TEST_ERROR\";\r\nexport const RESET_TEST = \"TEST/RESET_TEST\";\r\n\r\nexport function add_test(test) {\r\n  return {\r\n    type: ADD_TEST,\r\n    payload: test,\r\n  };\r\n}\r\nexport function add_test_success(payload) {\r\n  return {\r\n    type: ADD_TEST_SUCCESS,\r\n    payload,\r\n  };\r\n}\r\nexport function add_test_error(payload) {\r\n  return {\r\n    type: ADD_TEST_ERROR,\r\n    payload,\r\n  };\r\n}\r\nexport function reset_add_test() {\r\n  return {\r\n    type: RESET_TEST,\r\n  };\r\n}\r\n","import {\r\n  ADD_TEST_SUCCESS,\r\n  ADD_TEST_ERROR,\r\n  RESET_TEST,\r\n} from \"../../actions/add_test\";\r\n\r\nconst initialState = {\r\n  status: \"idle\",\r\n};\r\n//eslint-disable-next-line\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TEST_SUCCESS:\r\n      return {\r\n        status: action.payload.status,\r\n        message: action.payload.action,\r\n      };\r\n    case ADD_TEST_ERROR:\r\n      return {\r\n        status: 404,\r\n        message: action.payload,\r\n      };\r\n\r\n    case RESET_TEST:\r\n      return { ...initialState };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport quizzes from \"./quizzes/quizzes\";\r\nimport results from \"./results/results\";\r\nimport answers from \"./answers/answer\";\r\nimport quiz_list from \"./quiz_list/quiz_list\";\r\nimport addedQuizes from \"./addedQuizes/addedQuizes\";\r\nimport user from \"./add_user/add_user.js\";\r\n//import User from \"../../navigation/Screens.js/dist/User\";\r\nimport add_test from \"./add_test\";\r\nexport default combineReducers({\r\n  quizzes,\r\n  results,\r\n  answers,\r\n  quiz_list,\r\n  addedQuizes,\r\n  user,\r\n  add_test,\r\n});\r\n","import Axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n  loadQuizzesError,\r\n  LOAD_QUIZZES,\r\n  showQuizzes,\r\n} from \"../actions/show_quizzes\";\r\n\r\nconst fetchData = (p) => Axios.get(`http://134.249.181.40:7777/api/${p}/`);\r\n\r\nfunction* workerLoadData(action) {\r\n  try {\r\n    const data = yield call(fetchData, action.payload);\r\n    yield put(showQuizzes(data));\r\n  } catch (e) {\r\n    yield put(loadQuizzesError(e.message));\r\n  }\r\n}\r\n\r\nexport function* watchLoadData() {\r\n  try {\r\n    yield takeEvery(LOAD_QUIZZES, workerLoadData);\r\n  } catch (e) {\r\n    // console.log(e);\r\n  }\r\n}\r\n//const jsonData = `{\"quiz\":{\"id\":1,\"quiz_name\":\"First quiz\",\"creation_date\":\"2020-12-15T11:32:27.153608+02:00\"},\"questions\":[[{\"question\":{\"id\":1,\"quiz_id\":1,\"wording\":\"Whats up?\",\"text\":\"\",\"image\":\"\",\"is_multiple_choice\":false},\"choices\":[{\"id\":1,\"question_id\":1,\"text\":\"Good\"},{\"id\":2,\"question_id\":1,\"text\":\"Could be better\"},{\"id\":3,\"question_id\":1,\"text\":\"Bad\"}]}],[{\"question\":{\"id\":2,\"quiz_id\":1,\"wording\":\"Do you like this\",\"text\":\"\",\"image\":\"\",\"is_multiple_choice\":false},\"choices\":[{\"id\":4,\"question_id\":2,\"text\":\"Yep\"},{\"id\":5,\"question_id\":2,\"text\":\"Could be better\"},{\"id\":6,\"question_id\":2,\"text\":\"Nope\"}]}]]}`;\r\n//console.log(JSON.parse(jsonData));\r\n","export const SEND_ANSWERS = \"ANSWERS/SEND_ANSWERS\";\r\n// export const SHOW_RESULTS = \"RESULT/SHOW_RESULTS\";\r\n\r\nexport const sendAnswers = (payload) => {\r\n  return {\r\n    type: SEND_ANSWERS,\r\n    payload,\r\n  };\r\n};\r\n\r\n// export const showResult = (payload) => {\r\n//   return {\r\n//     type: SHOW_RESULTS,\r\n//     payload,\r\n//   };\r\n// };\r\n","import Axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { addResults } from \"../actions/results\";\r\nimport { SEND_ANSWERS } from \"../actions/send_answers\";\r\n\r\nconst sendAnswers = ({ obj, id }) =>\r\n  Axios.post(`http://134.249.181.40:7777/api/${id}/answer/`, obj);\r\n\r\n//TODO NORMAL USER\r\n\r\nfunction* workerSendData(action) {\r\n  console.log(action);\r\n  const reqObj = {\r\n    dude_id: action.payload.user,\r\n    answers: action.payload.obj.map((item) => ({\r\n      question_id: item.question.id,\r\n      choices_id: item.choices\r\n        .filter((i) => i.isSelected)\r\n        .map((i) => {\r\n          return i.id;\r\n        }),\r\n    })),\r\n  };\r\n  const res = yield call(sendAnswers, { obj: reqObj, id: action.payload.id });\r\n  // yield put();\r\n}\r\n\r\nexport function* watchSendData() {\r\n  try {\r\n    yield takeEvery(SEND_ANSWERS, workerSendData);\r\n  } catch (e) {\r\n    ///\r\n  }\r\n}\r\n//const jsonData = `{\"quiz\":{\"id\":1,\"quiz_name\":\"First quiz\",\"creation_date\":\"2020-12-15T11:32:27.153608+02:00\"},\"questions\":[[{\"question\":{\"id\":1,\"quiz_id\":1,\"wording\":\"Whats up?\",\"text\":\"\",\"image\":\"\",\"is_multiple_choice\":false},\"choices\":[{\"id\":1,\"question_id\":1,\"text\":\"Good\"},{\"id\":2,\"question_id\":1,\"text\":\"Could be better\"},{\"id\":3,\"question_id\":1,\"text\":\"Bad\"}]}],[{\"question\":{\"id\":2,\"quiz_id\":1,\"wording\":\"Do you like this\",\"text\":\"\",\"image\":\"\",\"is_multiple_choice\":false},\"choices\":[{\"id\":4,\"question_id\":2,\"text\":\"Yep\"},{\"id\":5,\"question_id\":2,\"text\":\"Could be better\"},{\"id\":6,\"question_id\":2,\"text\":\"Nope\"}]}]]}`;\r\n//console.log(JSON.parse(jsonData));\r\n","import Axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { LOAD_QUIZ_LIST, showQuizList } from \"../actions/load_quiz_list\";\r\n//import { LOAD_QUIZZES, showQuizzes } from \"../actions/show_quizzes\";\r\n\r\nconst fetchData = () => Axios.get(\"http://134.249.181.40:7777/api/\");\r\n\r\nfunction* workerLoadData() {\r\n  try {\r\n    const data = yield call(fetchData);\r\n    yield put(showQuizList(data));\r\n  } catch (e) {\r\n    yield put(showQuizList({ status: 404, message: e.message }));\r\n  }\r\n}\r\n\r\nexport function* watchLoadQuizList() {\r\n  try {\r\n    yield takeEvery(LOAD_QUIZ_LIST, workerLoadData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n//const jsonData = `{\"quiz\":{\"id\":1,\"quiz_name\":\"First quiz\",\"creation_date\":\"2020-12-15T11:32:27.153608+02:00\"},\"questions\":[[{\"question\":{\"id\":1,\"quiz_id\":1,\"wording\":\"Whats up?\",\"text\":\"\",\"image\":\"\",\"is_multiple_choice\":false},\"choices\":[{\"id\":1,\"question_id\":1,\"text\":\"Good\"},{\"id\":2,\"question_id\":1,\"text\":\"Could be better\"},{\"id\":3,\"question_id\":1,\"text\":\"Bad\"}]}],[{\"question\":{\"id\":2,\"quiz_id\":1,\"wording\":\"Do you like this\",\"text\":\"\",\"image\":\"\",\"is_multiple_choice\":false},\"choices\":[{\"id\":4,\"question_id\":2,\"text\":\"Yep\"},{\"id\":5,\"question_id\":2,\"text\":\"Could be better\"},{\"id\":6,\"question_id\":2,\"text\":\"Nope\"}]}]]}`;\r\n//console.log(JSON.parse(jsonData));\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return [];\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\n//TODO\r\n//SAVE USER NAME\r\n//SAVE RESULTS FOR THIS NAME\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify({\r\n      user: { ...state.user, message: \"\", status: null },\r\n    });\r\n    //const serializedState = JSON.stringify({ });\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n  ADD_TEST,\r\n  add_test_error,\r\n  add_test_success,\r\n} from \"../actions/add_test\";\r\n\r\n// const sendTest = (quiz) => {\r\n//   console.log(JSON.stringify(quiz));\r\n//   return axios.post(`http://134.249.181.40:7777/api/`, quiz);\r\n// };\r\n\r\nconst sendTest = (quiz) => {\r\n  console.log(quiz);\r\n  return axios({\r\n    method: \"post\",\r\n    url: \"http://134.249.181.40:7777/api/\",\r\n    data: quiz,\r\n  });\r\n};\r\n\r\n// const sendImages = (images) => {\r\n//   console.log(images);\r\n//   return axios({\r\n//     method: \"post\",\r\n//     url: \"http://134.249.181.40:7777/api/img\",\r\n//     data: images,\r\n//     headers: {\r\n//       Accept: \"application/json\",\r\n//       \"Content-Type\": \"multipart/form-data\",\r\n//     },\r\n//   });\r\n// const fd = new FormData();\r\n// const imgblob = new Blob([quiz], { type: \"image/jpeg\" });\r\n// fd.append(\"myimage\", imgblob);\r\n// return axios({\r\n//   method: \"post\",\r\n//   url: \"http://134.249.181.40:7777/api/\",\r\n//   data: quiz,\r\n//   headers: {\r\n//     Accept: \"application/json\",\r\n//     \"Content-Type\": \"multipart/form-data\",\r\n//   },\r\n// });\r\n//};\r\n\r\nfunction* workerSendData(action) {\r\n  console.log(action.payload);\r\n  try {\r\n    const res = yield call(sendTest, { quiz: action.payload });\r\n    //const img_res = yield call(sendImages, { images: [] });\r\n    yield put(add_test_success(res));\r\n  } catch (e) {\r\n    yield put(add_test_error(e));\r\n  }\r\n}\r\n\r\nexport function* watchSendNewTest() {\r\n  try {\r\n    yield takeEvery(ADD_TEST, workerSendData);\r\n  } catch (e) {\r\n    ///\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n  ADD_TEST,\r\n  add_test_error,\r\n  add_test_success,\r\n} from \"../actions/add_test\";\r\nimport {\r\n  add_user,\r\n  ADD_USER,\r\n  DELETE_USER,\r\n  login_success,\r\n  req_error,\r\n  logout_success,\r\n} from \"../actions/add_user\";\r\n\r\nconst login = (name) => {\r\n  const req = {\r\n    name: name,\r\n  };\r\n  return axios({\r\n    method: \"post\",\r\n    url: \"http://134.249.181.40:7777/api/dude\",\r\n    data: { dude: req },\r\n  });\r\n};\r\n\r\nconst logout = ({ id, key }) => {\r\n  const req = { editing_key: key };\r\n  return axios({\r\n    method: \"delete\",\r\n    url: `http://134.249.181.40:7777/api/dude/${id}`,\r\n    data: req,\r\n  });\r\n};\r\n\r\nfunction* workerLogin(action) {\r\n  try {\r\n    const res = yield call(login, action.payload);\r\n    yield put(login_success(res));\r\n  } catch (e) {\r\n    yield put(req_error(e));\r\n  }\r\n}\r\nexport function* watchLogin() {\r\n  try {\r\n    yield takeEvery(ADD_USER, workerLogin);\r\n  } catch (e) {\r\n    \r\n  }\r\n}\r\nfunction* workerLogout(action) {\r\n  try {\r\n    const res = yield call(logout, { ...action.payload });\r\n    console.log(res);\r\n    yield put(logout_success(res));\r\n  } catch (e) {\r\n    yield put(req_error(e));\r\n  }\r\n}\r\n\r\nexport function* watchLogout() {\r\n  try {\r\n    yield takeEvery(DELETE_USER, workerLogout);\r\n  } catch (e) {\r\n    ///\r\n  }\r\n}\r\n","import Axios from \"axios\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n  loadResultsError,\r\n  loadResultsSuccess,\r\n  LOAD_RESULTS,\r\n} from \"../actions/results\";\r\n\r\n// const req = { editing_key: key };\r\n// return axios({\r\n//   method: \"delete\",\r\n//   url: `http://134.249.181.40:7777/api/dude/${id}`,\r\n//   data: req,\r\n// });\r\nconst fetchData = (id) =>\r\n  Axios({\r\n    method: \"get\",\r\n    url: `http://134.249.181.40:7777/api/dude/${id}`,\r\n  });\r\n\r\nfunction* workerLoadData(action) {\r\n  try {\r\n    const data = yield call(fetchData, action.payload);\r\n    yield put(loadResultsSuccess(data));\r\n  } catch (e) {\r\n    yield put(loadResultsError(e));\r\n  }\r\n}\r\nexport function* watchLoadResults() {\r\n  try {\r\n    yield takeEvery(LOAD_RESULTS, workerLoadData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n//const jsonData = `{\"quiz\":{\"id\":1,\"quiz_name\":\"First quiz\",\"creation_date\":\"2020-12-15T11:32:27.153608+02:00\"},\"questions\":[[{\"question\":{\"id\":1,\"quiz_id\":1,\"wording\":\"Whats up?\",\"text\":\"\",\"image\":\"\",\"is_multiple_choice\":false},\"choices\":[{\"id\":1,\"question_id\":1,\"text\":\"Good\"},{\"id\":2,\"question_id\":1,\"text\":\"Could be better\"},{\"id\":3,\"question_id\":1,\"text\":\"Bad\"}]}],[{\"question\":{\"id\":2,\"quiz_id\":1,\"wording\":\"Do you like this\",\"text\":\"\",\"image\":\"\",\"is_multiple_choice\":false},\"choices\":[{\"id\":4,\"question_id\":2,\"text\":\"Yep\"},{\"id\":5,\"question_id\":2,\"text\":\"Could be better\"},{\"id\":6,\"question_id\":2,\"text\":\"Nope\"}]}]]}`;\r\n//console.log(JSON.parse(jsonData));\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchLoadData } from \"./sagas/quizzes\";\r\nimport { watchSendData } from \"./sagas/answers\";\r\nimport { watchLoadQuizList } from \"./sagas/load_quizlist\";\r\nimport { loadState, saveState } from \"./sessionStorage\";\r\nimport { watchSendNewTest } from \"./sagas/addTest\";\r\n///import { watchSendNewImage } from \"./sagas/sendImage\";\r\nimport { watchLogin, watchLogout } from \"./sagas/authUser\";\r\nimport { watchLoadResults } from \"./sagas/results\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const persistedState = loadState();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  compose(\r\n    applyMiddleware(sagaMiddleware),\r\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nsagaMiddleware.run(watchLoadData);\r\nsagaMiddleware.run(watchSendData);\r\nsagaMiddleware.run(watchLoadQuizList);\r\nsagaMiddleware.run(watchSendNewTest);\r\nsagaMiddleware.run(watchLoadResults);\r\nsagaMiddleware.run(watchLogin);\r\nsagaMiddleware.run(watchLogout);\r\n\r\nexport default store;\r\n\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n});\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\n\r\nexport default function Header({ takeState }) {\r\n  const [header, setHeader] = useState(\"\");\r\n  const [overlay, setOverlay] = useState(\"\");\r\n  function burger() {\r\n    setHeader(header == \"\" ? \"active\" : \"\");\r\n    setOverlay(overlay == \"\" ? \"overlay_active\" : \"\");\r\n  }\r\n  const user = useSelector((state) => state.user.user.name);\r\n  console.log(\"RENDER HEADER\");\r\n  return (\r\n    <header className=\"header\">\r\n      <div className={`overlay ${overlay}`}></div>\r\n      <div className=\"header__body\">\r\n        <Link to=\"/\" className=\"header__logo\">\r\n          <p>\r\n            <span>Q</span>TEST\r\n          </p>\r\n        </Link>\r\n\r\n        <nav className={`header__menu ${header}`}>\r\n          <ul className=\"header__list\">\r\n            <li>\r\n              <Link to=\"/add\" className=\"header__link\">\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/contacts\" className=\"header__link\">\r\n                Contacts\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\" className=\"header__link\">\r\n                About Ass\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"dropdown\">\r\n          <Link to=\"/results\" class=\"dropbtn\">\r\n            <p>{user}</p>\r\n          </Link>\r\n          <div className=\"dropdown-content\">\r\n            <Link to=\"/results\">Результаты</Link>\r\n            <Link className=\"logout\">Выйти</Link>\r\n          </div>\r\n        </div>\r\n        <div className={`header__burger ${header}`} onClick={burger}>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\n//  <nav>\r\n//     <div className=\"nav-wrapper mv\">\r\n//       <Link\r\n//         style={{\r\n//           color: \"inherit\",\r\n//           textDecoration: \"inherit\",\r\n//           cursor: \"pointer\",\r\n//         }}\r\n//         className=\"brand-logo left\"\r\n//         to=\"/\"\r\n//       >\r\n//         QTest\r\n//       </Link>\r\n//       <ul className=\"right hide-on-med-and-down\">\r\n//         <li>\r\n//           <Link to=\"/add\">Add</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to=\"/contacts\">Contacts</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to=\"/about\">About ASS</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to=\"/results\">Logged as: {user}</Link>\r\n//         </li>\r\n//       </ul>\r\n//     </div>\r\n//   </nav>\r\n\r\n{\r\n  /* <div className=\"header__user\">\r\n          <Link to=\"/results\">\r\n            <p> Logged as: {user && user}</p>\r\n          </Link>\r\n        </div> */\r\n}\r\n","export default __webpack_public_path__ + \"static/media/image.5015ee61.png\";","import React from \"react\";\r\nimport \"./styles/loader.css\";\r\nimport img from './styles/image.png'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div>\r\n      <div className=\"loader_container\">\r\n        <img className=\"rot\" src={img} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Loader);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { loadQuizList } from \"../../redux/actions/load_quiz_list\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./stylesforhomescreen/list.css\";\r\n\r\nfunction HomeScreen() {\r\n  const dispatch = useDispatch();\r\n  const quiz_list = useSelector((state) => state.quiz_list);\r\n  const [input, setInput] = useState(\"\");\r\n  const history = useHistory();\r\n  console.log(\"RENDER HOME SCREEN\");\r\n  const [privat_input, setPrivat_input] = useState(\"\");\r\n\r\n  const user = useSelector((state) => state.user.loggedIn);\r\n  if (!user) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(loadQuizList());\r\n  }, [dispatch]);\r\n\r\n  const handleOnPres = (e) => {\r\n    if (e.code === \"Enter\") {\r\n      const id = e.target.value;\r\n      let re = /^((\\w){8})-((\\w){4})-((\\w){4})-((\\w){4})-((\\w){12})$/g;\r\n      if (re.test(id)) {\r\n        history.push(`/quiz/${e.target.value}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnClick = (e) => {\r\n    let re = /^((\\w){8})-((\\w){4})-((\\w){4})-((\\w){4})-((\\w){12})$/g;\r\n    if (re.test(privat_input)) {\r\n      history.push(`/quiz/${privat_input}`);\r\n    }\r\n  };\r\n\r\n  if (quiz_list.status === 200) {\r\n    return (\r\n      <div className=\"content_container\">\r\n        <div className=\"content__home\">\r\n          <div className=\"title_container\">\r\n            <p>Список опросов</p>\r\n          </div>\r\n          <form>\r\n            <div className=\"search_container\">\r\n              <div className=\"icon\">\r\n                <div></div>\r\n              </div>\r\n              <input\r\n                id=\"text\"\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                type=\"text\"\r\n                className=\"text-input\"\r\n                placeholder=\"Поиск теста\"\r\n              />\r\n            </div>\r\n            <div class=\"private_container\">\r\n              <div className=\"icon\">\r\n                <div></div>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"text-input\"\r\n                id=\"text_private\"\r\n                onKeyPress={handleOnPres}\r\n                value={privat_input}\r\n                onChange={(e) => setPrivat_input(e.target.value)}\r\n                placeholder=\"Ввести ID приватного теста\"\r\n              />\r\n              <div onClick={handleOnClick} class=\"private_search\">\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          {quiz_list.data.quizzes\r\n            .filter((e) => {\r\n              if (input.length) {\r\n                return !e.quiz_name\r\n                  .toLowerCase()\r\n                  .indexOf(input.trim().toLowerCase(), 0);\r\n              } else {\r\n                return true;\r\n              }\r\n            })\r\n            .map((qz) => {\r\n              return (\r\n                <div className=\"quizbox_container\" key={qz.id}>\r\n                  <Link className=\"quizbox\" to={`/quiz/${qz.id}`}>\r\n                    <div className=\"quiz-title\">\r\n                      <p>{qz.quiz_name}</p>\r\n                    </div>\r\n                    <div className=\"quiz-quantity\">\r\n                      <p>Кол-во вопросов: {qz.questions_count}</p>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (quiz_list.status === 404) {\r\n    return <p>ERROR: {quiz_list.message}</p>;\r\n  } else {\r\n    return <Loader />;\r\n  }\r\n}\r\nexport default React.memo(HomeScreen);\r\n\r\n{\r\n  /* <ul className=\"collection\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <form className=\"col s12\">\r\n              <div className=\"row\">\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    id=\"text\"\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setinput(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"text\">Введите название теста</label>\r\n                </div>\r\n\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    id=\"text_private\"\r\n                    type=\"text\"\r\n                    //value={input}\r\n                    onKeyPress={handleOnClick}\r\n                    //onChange={(e) => setinput(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"text_private\">\r\n                    Введите id приватного теста\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {quiz_list.data.quizzes\r\n          .filter((e) => {\r\n            if (input.length) {\r\n              return !e.quiz_name\r\n                .toLowerCase()\r\n                .indexOf(input.trim().toLowerCase(), 0);\r\n            } else {\r\n              return true;\r\n            }\r\n          })\r\n          .map((qz) => {\r\n            return (\r\n              <li className=\"collection-item\" key={qz.id}>\r\n                <Link\r\n                  style={{ color: \"red\", textDecoration: \"inherit\" }}\r\n                  to={`/quiz/${qz.id}`}\r\n                >\r\n                  <p>{qz.quiz_name}</p> Количество вопросов:{\" \"}\r\n                  {qz.questions_count}\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul> */\r\n}\r\n","import React from \"react\";\r\nimport Loader from \"./Loader\";\r\nimport PropTypes from \"prop-types\"; // ES6\r\nimport \"./styles/style.css\";\r\n\r\nfunction ListQuiz({ state, handleSelect, selectedQuestion }) {\r\n  console.log('ДЕБАГ РАКЕТА ЗАЛЕТАЄ :rocket:', state)\r\n  if (state.length) {\r\n    return (\r\n      <div className=\"leftbar\">\r\n        <div className=\"quizlist\">\r\n          {state &&\r\n            state.map((item, index) => {\r\n              return (\r\n                <div className={`quizlist_item ${\r\n                  item.isDone ? \"voted\" : \"unvoted\"\r\n                } ${\r\n                  selectedQuestion === index ? \"current\" : \"\"\r\n                }`}\r\n                >\r\n                  <a key={index}>\r\n                    <span>{index + 1}</span>\r\n\r\n                    <p\r\n                      className=\"quizlist_item_name\"\r\n                      onClick={() => handleSelect(index)}\r\n                    >\r\n                      {item.wording}\r\n                    </p>\r\n\r\n                    <div\r\n                      className={'icon'}\r\n                    >\r\n                      <div></div>\r\n                    </div>\r\n                  </a>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n        <div className=\"complete-btn_container\">\r\n          <a href=\"\" className=\"complete-btn\">\r\n            <p>Завершить тест</p>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Loader />;\r\n  }\r\n}\r\n\r\nListQuiz.propTypes = {\r\n  handleSelect: PropTypes.func,\r\n  state: PropTypes.func,\r\n  selectedQuestion: PropTypes.number,\r\n};\r\n\r\nexport default React.memo(ListQuiz);\r\n\r\n{\r\n  /* <div>\r\n<ul className=\"collection\">\r\n  {state.questions &&\r\n    state.questions.map((item, index) => {\r\n      return (\r\n        <li\r\n          key={index}\r\n        >\r\n          <p\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => handleSelect(index)}\r\n            className={`collection-item ${\r\n              selectedQuestion === index ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            {index + 1} - {item.question.wording}\r\n          </p>\r\n        </li>\r\n      );\r\n    })}\r\n</ul>\r\n</div> */\r\n}\r\n","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\"; // ES6\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setDone, setSelected } from \"../redux/actions/show_quizzes\";\r\n//import ModalComponent from \"./Modal\";\r\nimport \"./styles/style.css\";\r\n\r\nconst Question = ({\r\n  isDone,\r\n  id,\r\n  text,\r\n  wording,\r\n  answers,\r\n  imageUrl,\r\n  multiple,\r\n  overlay,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  console.log('ДЕБАГ РАКЕТА ЗАЛЕТАЄ :rocket:', imageUrl)\r\n\r\n  const handleSelectItem = (e) => {\r\n    console.log(e.target.checked)\r\n    dispatch(setSelected({ answ: e.target.value, id }));\r\n  };\r\n  console.log(isDone)\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <div className=\"quiz_body\">\r\n          <div className=\"title_container\">\r\n            <p>{`Вопрос `}</p>\r\n          </div>\r\n          <div className=\"quizname\">\r\n            <p>{wording}</p>\r\n          </div>\r\n          <div className=\"image_container\">\r\n            {imageUrl && <img width={550} src={\"http://134.249.181.40:7777\"+imageUrl.picture} />}\r\n          </div>\r\n          <div className=\"description_container\">\r\n            <p>{text}</p>\r\n          </div>\r\n          <div className=\"checkbox_container\">\r\n            {answers.map((item) => {\r\n              return (\r\n                <div className=\"checkbox\">\r\n                  <input\r\n                    disabled={isDone}\r\n                    onChange={handleSelectItem}\r\n                    checked={item.isSelected}\r\n                    value={item.id}\r\n                    id={item.id}\r\n                    type=\"checkbox\"\r\n                  />\r\n                  <label htmlFor={item.id}>                \r\n                    <p>{item.text}</p>\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"buttons_container\">\r\n            <input\r\n              type=\"button\"\r\n              className=\"button_vote button\"\r\n              value=\"Ответить\"\r\n              disabled={isDone}\r\n              onClick={() => {\r\n                console.log('Xyi')\r\n                dispatch(setDone(id));\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"list-btn_container\">\r\n        <a\r\n          className=\"list-btn\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            document\r\n              .getElementsByClassName(\"leftbar\")[0]\r\n              .classList.toggle(\"leftbar_active\");\r\n            document\r\n              .getElementsByClassName(\"header__burger\")[0]\r\n              .classList.remove(\"active\");\r\n            document\r\n              .getElementsByClassName(\"header__menu\")[0]\r\n              .classList.remove(\"active\");\r\n            document\r\n              .getElementsByClassName(\"overlay\")[0]\r\n              .classList.remove(\"overlay_active\");\r\n          }}\r\n        >\r\n          <p>Список</p>\r\n          <div className=\"arrow\">\r\n            <div className=\"arrow_icon\"></div>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nQuestion.propTypes = {\r\n  id: PropTypes.string,\r\n  wording: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n  answers: PropTypes.array,\r\n};\r\nexport default memo(Question);\r\n\r\n{\r\n  /* <Container>\r\n      <Alert variant=\"light\">\r\n        <Row>\r\n          <Col>\r\n            <Alert.Heading>{wording}</Alert.Heading>\r\n            {multiple && (\r\n              <Alert variant=\"info\">Можете выбрать несколько ваиантов!</Alert>\r\n            )}\r\n          </Col>\r\n          {imageUrl && (\r\n            <Col>\r\n              <Image\r\n                className=\"Img\"\r\n                width={350}\r\n                //height={300}\r\n                src={\"http://134.249.181.40:7777\" + imageUrl.picture}\r\n                rounded\r\n              />\r\n            </Col>\r\n          )}\r\n        </Row>\r\n        <hr />\r\n        <p className=\"qtext\">{text}</p>\r\n      </Alert>\r\n      <List>\r\n        {answers.map((item) => {\r\n          return (\r\n            <ListItem key={item.id}>\r\n              <p>\r\n                <label>\r\n                  <input\r\n                    disabled={isDone}\r\n                    onChange={handleSelectItem}\r\n                    checked={item.isSelected}\r\n                    value={item.id}\r\n                    id={item.id}\r\n                    type=\"checkbox\"\r\n                  />\r\n                  <span>{item.text}</span>\r\n                </label>\r\n              </p>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n      <Button\r\n        disabled={isDone}\r\n        variant=\"primary\"\r\n        size=\"lg\"\r\n        block\r\n        onClick={() => {\r\n          dispatch(setDone(id));\r\n        }}\r\n      >\r\n        Ответить\r\n      </Button>\r\n    </Container> */\r\n}\r\n","import React, { memo, useEffect, useState, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport ListQuiz from \"../../components/ListQuiz\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Question from \"../../components/Question\";\r\nimport { clearQuiz, loadQuizzes } from \"../../redux/actions/show_quizzes\";\r\nimport { Context } from \"../MainNavigator\";\r\n\r\nexport default memo(function Quiz() {\r\n  const overlay = useContext(Context);\r\n  let { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state.quizzes);\r\n  const [selectedQuestion, setSelectedQuestion] = useState(0);\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const history = useHistory();\r\n  const found = state.questions.find((i) => i.isDone === false);\r\n\r\n  const user = useSelector((state) => state.user.loggedIn);\r\n  if (!user) {\r\n    history.push(\"/\");\r\n  }\r\n  console.log(\"RENDER TEST SCREEN\");\r\n\r\n  useEffect(() => {\r\n    dispatch(loadQuizzes(id));\r\n    return () => {\r\n      dispatch(clearQuiz());\r\n    };\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (!found && state.status === 200) {\r\n      history.push(`/done/${id}`);\r\n    }\r\n  }, [found, id, history, state.status]);\r\n\r\n  const handleAnswer = (answer) => {\r\n    setSelectedAnswers([...selectedAnswers, answer]);\r\n  };\r\n\r\n  const handleSelect = (id) => {\r\n    console.log(id);\r\n    setSelectedQuestion(id);\r\n  };\r\n\r\n  const stateToQuestionName = () =>\r\n    state.questions.map((i) => ({\r\n      wording: i.question.wording,\r\n      isDone: i.isDone,\r\n    }));\r\n\r\n  if (state.status === 200) {\r\n    return (\r\n      <>\r\n        <ListQuiz\r\n          selectedAnswers={selectedAnswers}\r\n          state={stateToQuestionName()}\r\n          handleSelect={handleSelect}\r\n          selectedQuestion={selectedQuestion}\r\n        />\r\n        <Question\r\n          isDone={state.questions[selectedQuestion].isDone}\r\n          setSelectedAnswers={handleAnswer}\r\n          imageUrl={state.questions[selectedQuestion].question.image}\r\n          id={state.questions[selectedQuestion].question.id}\r\n          text={state.questions[selectedQuestion].question.text}\r\n          wording={state.questions[selectedQuestion].question.wording}\r\n          answers={state.questions[selectedQuestion].choices}\r\n          multiple={\r\n            state.questions[selectedQuestion].question.is_multiple_choice\r\n          }\r\n          overlay={overlay}\r\n        />\r\n      </>\r\n    );\r\n  } else if (state.status === 404) {\r\n    return <p>ERROR: {state.message}</p>;\r\n  } else return <Loader />;\r\n});\r\n","import React from \"react\";\r\n\r\nexport default function Result({ pass_date, name, rating }) {\r\n  return (\r\n    <div className=\"quizbox_container\">\r\n      <div className=\"quizbox\">\r\n        <div className=\"quiz-info\">\r\n          <div className=\"quiz-title\">\r\n            <p>{name}</p>\r\n            <p>Дата складання: {new Date(pass_date).toString()}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"quiz-result\">{rating}/100</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ErrorComponent({ message }) {\r\n  return (\r\n    <div style={{ border: \"1px solid black\" }}>\r\n      <p style={{ color: \"red\" }}>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Results.css\";\r\nimport { delete_user } from \"../../../redux/actions/add_user\";\r\nimport { loadResults } from \"../../../redux/actions/results\";\r\nimport Result from \"../../../components/Result/Result\";\r\nimport ErrorComponent from \"../../../components/ErrorComponent/Error\";\r\n\r\nexport default function ResultsScreen() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const results = useSelector((state) => state.results);\r\n  const user = useSelector((state) => state.user);\r\n  const userLogged = useSelector((state) => state.user.loggedIn);\r\n\r\n  console.log(\"RESULTS SCREEN\");\r\n\r\n  React.useEffect(() => {\r\n    if (!userLogged) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [userLogged]);\r\n\r\n  const handleLogout = () => {\r\n    if (user.user.editing_key.length) {\r\n      dispatch(delete_user({ id: user.user.id, key: user.user.editing_key }));\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(loadResults(user.user.id));\r\n  }, []);\r\n\r\n  if (user.status === 400 && user.message.length) {\r\n    return <ErrorComponent message={user.message} />;\r\n  }\r\n\r\n  if (results.status === 200 || results.results.length) {\r\n    return (\r\n      <>\r\n        <button onClick={handleLogout}>Logout</button>\r\n        <div className=\"content_container\">\r\n          <div className=\"content__\">\r\n            <div className=\"title_container\">\r\n              <p>Результаты</p>\r\n            </div>\r\n            {results.results.map((i) => {\r\n              console.log();\r\n              return (\r\n                <Result\r\n                  pass_date={i.pass_date}\r\n                  name={i.quiz.quiz_name}\r\n                  rating={i.rating * 100}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return <Loader />;\r\n  }\r\n}\r\n\r\n{\r\n  /* <ul className=\"collection with-header\">\r\n        <li className=\"collection-header\" key={Math.random()}>\r\n          <h4>{`${result.results[0].name}`}</h4>\r\n        </li>\r\n        {result.results.map((i) => {\r\n          return (\r\n            <li className=\"collection-item\" key={Math.random()}>\r\n              {i.quiz_name}: {(i.rating * 100).toFixed(0)}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul> */\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import { useDispatch } from 'react-redux';\r\nimport { add_user } from \"../../redux/actions/add_user.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorComponent from \"../../components/ErrorComponent/Error.js\";\r\n\r\nexport const UserScreen = () => {\r\n  const ref = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.user.loggedIn);\r\n\r\n  console.log(\"RENDER USER\");\r\n\r\n  const status = useSelector((state) => state.user.status);\r\n  const message = useSelector((state) => state.user.message);\r\n\r\n  if (user) {\r\n    history.push(\"/home\");\r\n  }\r\n  const [error, seterror] = React.useState(\"\");\r\n\r\n  const submit = () => {\r\n    if (ref.current.value.length) {\r\n      dispatch(add_user(ref.current.value));\r\n      ref.current.value = \"\";\r\n    } else {\r\n      seterror(\"Enter name\");\r\n    }\r\n  };\r\n\r\n  const handleName = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      submit();\r\n    }\r\n  };\r\n  const handleClickName = (e) => {\r\n    submit();\r\n  };\r\n\r\n  console.log(status, message);\r\n  if (status === 400 && message.length) {\r\n    return <ErrorComponent message={message} />;\r\n  } else {\r\n    return (\r\n      <div className=\"row p\">\r\n        <div className=\"input-field col s6\">\r\n          <input\r\n            placeholder=\"Enter your name\"\r\n            style={{ border: \"1px solid black\" }}\r\n            id=\"icon_prefix\"\r\n            type=\"text\"\r\n            onKeyPress={handleName}\r\n            className=\"validate\"\r\n            ref={ref}\r\n          />\r\n          <label htmlFor=\"icon_prefix\">Name</label>\r\n          <button\r\n            onClick={() => {\r\n              handleClickName();\r\n            }}\r\n          >\r\n            Log in\r\n          </button>\r\n          {error && <ErrorComponent message={error} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport \"./global-slave.css\";\r\n\r\nfunction Choice({ question_id, choise_id }) {\r\n  return (\r\n    <div className=\"answer_container\">\r\n      <div className=\"checkbox\">\r\n        <input \r\n        name={`choice-is_correct-${question_id}-${choise_id}`}\r\n        type=\"checkbox\" id={`checkbox_${question_id}-${choise_id}`} className=\"inp\" />\r\n        <label for={`checkbox_${question_id}-${choise_id}`}></label>\r\n      </div>\r\n      <input \r\n      name={`choice-text-${question_id}-${choise_id}`}\r\n      type=\"text\" className=\"text-input\" placeholder={`Ответ ${choise_id+1}`} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Choice;\r\n\r\n{\r\n  /* <Col>\r\n      <input\r\n        type=\"text\"\r\n        name={`choice-text-${question_id}-${choise_id}`}\r\n        placeholder=\"Название вопроса\"\r\n      />\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          name={`choice-is_correct-${question_id}-${choise_id}`}\r\n        />\r\n        <span>this true?</span>\r\n      </label>\r\n    </Col> */\r\n}\r\n","import Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport Choice from \"./Choice\";\r\nimport \"./global-slave.css\";\r\n\r\nexport default function QuestionComponent({\r\n  addAnswers,\r\n  question_id,\r\n  choices,\r\n}) {\r\n  function deleteImage() {\r\n    return Axios({\r\n      method: \"delete\",\r\n      url: `http://134.249.181.40:7777/api/image/${id}`,\r\n      data: {\r\n        editing_key: key,\r\n      },\r\n    }).then((e) => {\r\n      setImage(null);\r\n      setId(null);\r\n      setKey(null);\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n  const sendImages = (selectedFile) => {\r\n    const formdata = new FormData();\r\n    formdata.append(\"picture\", selectedFile);\r\n    return Axios({\r\n      method: \"post\",\r\n      url: \"http://134.249.181.40:7777/api/image\",\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: formdata,\r\n    })\r\n      .then((e) => {\r\n        setKey(e.data.editing_key);\r\n        setImage(e.data.picture);\r\n        setId(e.data.id);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [id, setId] = useState(null);\r\n  const [key, setKey] = useState(null);\r\n  return (\r\n    <div className=\"question_container\">\r\n      <div className=\"question-title_container\">\r\n        <p>Вопрос {question_id + 1}</p>\r\n      </div>\r\n      <div className=\"question-name_container\">\r\n        <input type=\"text\" class=\"text-input\" placeholder=\"Название вопроса\" name={`question-wording-${question_id}`}/>\r\n      </div>\r\n\r\n      {!image && (\r\n        <div className=\"add-image_container\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={(e) => {\r\n                sendImages(e.target.files[0]);\r\n              }}\r\n              type=\"file\"\r\n              name=\"file\"\r\n              id=\"file\"\r\n              className=\"input-file\"\r\n            />\r\n            <label for=\"file\" className=\"btn-tertiary\">\r\n              <div></div>\r\n              <span className=\"js-fileName\">Загрузить картинку</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {image && (\r\n        <div className=\"img_container\">\r\n          <div className=\"img-wrap\">\r\n            <img src={\"http://134.249.181.40:7777\" + image} className=\"img\" />\r\n            <div onClick={deleteImage} className=\"del-img-btn\">\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"description_container\">\r\n        <textarea\r\n          placeholder=\"Описание\"\r\n          rows=\"6\"\r\n          className=\"description\"\r\n          name={`question-text-${question_id}`}\r\n        ></textarea>\r\n      </div>\r\n      <input\r\n        disabled={true}\r\n        type=\"hidden\"\r\n        value={id}\r\n        name={`question-image-${question_id}`}\r\n      />\r\n      <div className=\"answers_container\">\r\n        {choices.map((el) => {\r\n          return <Choice question_id={question_id} choise_id={el.choise_id} />;\r\n        })}\r\n      </div>\r\n      <div className=\"add-answer-button_container\">\r\n        <div\r\n          onClick={() => {\r\n            addAnswers(question_id);\r\n          }}\r\n          className=\"add-answer-button add-button button\"\r\n        >\r\n          <div className=\"add-img\">\r\n            <div></div>\r\n          </div>\r\n          <p>Добавить ответ</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n{\r\n  /* <div id={`question${question_id}`}>\r\n      {image && <img src={\"http://134.249.181.40:7777\" + image} />}\r\n      <input\r\n        type=\"text\"\r\n        name={`question-wording-${question_id}`}\r\n        placeholder=\"Название опроса\"\r\n      />\r\n      <input\r\n        disabled={true}\r\n        type=\"hidden\"\r\n        value={id}\r\n        name={`question-image-${question_id}`}\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        //value={selectedFile}\r\n        onChange={(e) => {\r\n          //console.log(e.target);\r\n          sendImages(e.target.files[0]);\r\n        }}\r\n      />\r\n      <input\r\n        //accept=\"image/*\"\r\n        type=\"button\"\r\n        value=\"delete\"\r\n        onClick={deleteImage}\r\n      />\r\n      <div id=\"list_answers\">\r\n        {choices.map((el) => {\r\n          console.log(el);\r\n          return <Choice question_id={question_id} choise_id={el.choise_id} />;\r\n        })}\r\n      </div>\r\n      <div>\r\n        <i\r\n          onClick={() => {\r\n            addAnswers(question_id);\r\n          }}\r\n          style={{ cursor: \"pointer\" }}\r\n          className=\"medium material-icons\"\r\n        >\r\n          add_circle_outline\r\n        </i>\r\n      </div>\r\n    </div> */\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { add_test, reset_add_test } from \"../../redux/actions/add_test\";\r\nimport QuestionComponent from \"../../components/Form/Question\";\r\nimport \"./styles/global-master.css\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function AddQuizScreen() {\r\n  const dispatch = useDispatch();\r\n  const test_status = useSelector((state) => state.add_test);\r\n  const history = useHistory();\r\n  const [array, setArray] = useState([\r\n    {\r\n      question_id: 0,\r\n      choises: [\r\n        {\r\n          choise_id: 0,\r\n          isCorect: false,\r\n        },\r\n        {\r\n          choise_id: 1,\r\n          isCorect: false,\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const user = useSelector((state) => state.user.loggedIn);\r\n\r\n  if (!user) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      dispatch(reset_add_test());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  function saveQuizName() {\r\n    const inputs = document.querySelectorAll(\"input, textarea\");\r\n    console.log(inputs);\r\n    const data = {\r\n      quiz_name: \"\",\r\n      questions: [],\r\n    };\r\n    console.log(inputs);\r\n    Array.from(inputs).forEach((el) => {\r\n      let armel = el.name.split(\"-\");\r\n      switch (armel[0]) {\r\n        case \"quiz\":\r\n          data[\"quiz_name\"] = el.value;\r\n          break;\r\n        case \"question\":\r\n          if (data.questions[parseInt(armel[2])]) {\r\n            data.questions[parseInt(armel[2])][armel[1]] = el.checked\r\n              ? el.type == \"checkbox\"\r\n              : el.value;\r\n          } else {\r\n            data.questions[parseInt(armel[2])] = {\r\n              [armel[1]]: el.value !== \"on\" ? el.value : el.checked,\r\n              choices: [],\r\n            };\r\n          }\r\n          break;\r\n        case \"choice\":\r\n          if (\r\n            data.questions[parseInt(armel[2])][\"choices\"][parseInt(armel[3])]\r\n          ) {\r\n            data.questions[parseInt(armel[2])][\"choices\"][parseInt(armel[3])][\r\n              armel[1]\r\n            ] = el.value !== \"on\" ? el.value : el.checked;\r\n          } else {\r\n            data.questions[parseInt(armel[2])][\"choices\"][\r\n              parseInt(armel[3])\r\n            ] = { [armel[1]]: el.value !== \"on\" ? el.value : el.checked };\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    dispatch(add_test(data));\r\n  }\r\n\r\n  function addAnswers(el) {\r\n    setArray((prevArray) => [\r\n      ...prevArray.map((e) =>\r\n        e.question_id === el\r\n          ? {\r\n              ...e,\r\n              choises: [\r\n                ...e.choises,\r\n                {\r\n                  choise_id:\r\n                    prevArray[el].choises[prevArray[el].choises.length - 1]\r\n                      .choise_id + 1,\r\n                  isCorect: false,\r\n                },\r\n              ],\r\n            }\r\n          : e\r\n      ),\r\n    ]);\r\n  }\r\n\r\n  function nextQuestion(n) {\r\n    return {\r\n      question_id: n,\r\n      choises: [\r\n        {\r\n          choise_id: 0,\r\n          isCorect: false,\r\n        },\r\n        {\r\n          choise_id: 1,\r\n          isCorect: false,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  function addNewQuestion() {\r\n    setArray((prevArray) => [...prevArray, nextQuestion(prevArray.length)]);\r\n  }\r\n  if (test_status.status === \"idle\") {\r\n    return (\r\n      <div className=\"content_container\">\r\n        <div className=\"content__\">\r\n          <div className=\"title_container\">\r\n            <p>Создать тест</p>\r\n          </div>\r\n          <div className=\"test-name_container\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"quiz-name\"\r\n              class=\"text-input\"\r\n              placeholder=\"Название теста\"\r\n            />\r\n          </div>\r\n          <form name=\"quiz\" className=\"questions_global_container\">\r\n            {array.map((elQ) => {\r\n              console.log(elQ);\r\n              return (\r\n                <QuestionComponent\r\n                  choices={elQ.choises}\r\n                  addAnswers={addAnswers}\r\n                  question_id={elQ.question_id}\r\n                />\r\n              );\r\n            })}\r\n          </form>\r\n          <div className=\"add-question-button_container\">\r\n            <div\r\n              onClick={addNewQuestion}\r\n              className=\"add-question-button add-button button\"\r\n            >\r\n              <div className=\"add-img\">\r\n                <div></div>\r\n              </div>\r\n              <p>Добавить вопрос</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"create-button_container\">\r\n            <div onClick={saveQuizName} className=\"create-button button\">\r\n              <p>Создать</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    ///Обработка ошибок 404\r\n  } else if (test_status.status === 404) {\r\n    return <p>ERRRROR</p>;\r\n    ///Екран Успешного добавления теста\r\n  } else if (test_status.status === 200) {\r\n    return <p>ADD_TEST_SUCCESS</p>;\r\n  }\r\n}\r\n\r\n{\r\n  /* <Container>\r\n        <div\r\n          style={{\r\n            margin: \"auto\",\r\n            width: \"auto\",\r\n            textAlign: \"center\",\r\n            color: \"#e57373\",\r\n          }}\r\n        >\r\n          <h1>Создать тест</h1>\r\n        </div>\r\n        <div className=\"row\">\r\n          <form className=\"col s12\">\r\n            <div className=\"row\">\r\n              <div className=\"input-field col s6\">\r\n                <input\r\n                  id=\"icon_prefix2\"\r\n                  className=\"materialize-textarea\"\r\n                  placeholder=\"Enter your Quiz name\"\r\n                  name=\"quiz-name\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div\r\n          style={{\r\n            margin: \"auto\",\r\n            width: \"auto\",\r\n            textAlign: \"center\",\r\n            color: \"#e57373\",\r\n          }}\r\n        >\r\n          <h2>Добавить вопрос</h2>\r\n          <form id=\"quiz\">\r\n            {array.map((elQ) => {\r\n              console.log(elQ);\r\n              return (\r\n                <QuestionComponent\r\n                  choices={elQ.choises}\r\n                  addAnswers={addAnswers}\r\n                  question_id={elQ.question_id}\r\n                />\r\n              );\r\n            })}\r\n          </form>\r\n          <hr />\r\n          <div>\r\n            <i\r\n              onClick={addNewQuestion}\r\n              style={{ cursor: \"pointer\" }}\r\n              className=\"medium material-icons\"\r\n            >\r\n              fast_forward\r\n            </i>\r\n          </div>\r\n          <button onClick={saveQuizName}>Add</button>\r\n        </div>\r\n      </Container> */\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { sendAnswers } from \"../../../redux/actions/send_answers\";\r\nimport { clearQuiz } from \"../../../redux/actions/show_quizzes\";\r\n\r\nexport default function TestDoneScreen() {\r\n  const state = useSelector((state) => state.quizzes);\r\n  const user = useSelector((state) => state.user.user.id);\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log(user, id);\r\n    dispatch(sendAnswers({ obj: state.questions, id, user }));\r\n    return () => dispatch(clearQuiz());\r\n    // eslint-disable-next-line\r\n  }, [dispatch, id]);\r\n\r\n  return <div>You pass test!!</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"../components/Header/Header\";\r\nimport HomeScreen from \"./Screens.js/HomeScreen\";\r\nimport Quiz from \"./Screens.js/Quiz\";\r\nimport ResultsScreen from \"./Screens.js/ResultScreen/ResultsScreen\";\r\nimport { UserScreen } from \"./Screens.js/UserScreen.js\";\r\nimport AddQuizScreen from \"./Screens.js/AddQuizScreen\";\r\nimport TestDoneScreen from \"./Screens.js/TestDoneScreen/TestDoneScreen\";\r\n\r\nexport const Context = React.createContext();\r\n\r\nfunction MainNavigator() {\r\n  // const [overlay, setOverlay] = useState(\"\")\r\n\r\n  // function takeState() {\r\n  //   setOverlay((overlay == \"\") ? \"overlay_active\" : \"\")\r\n  // }\r\n\r\n  return (\r\n    <Router>\r\n      <Context.Provider>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/ClasstimeKiller/\">\r\n            <UserScreen />\r\n          </Route>\r\n          <Route path=\"/ClasstimeKiller/home\">\r\n            <HomeScreen />\r\n          </Route>\r\n          <Route path=\"/ClasstimeKiller/add\">\r\n            <AddQuizScreen />\r\n          </Route>\r\n          <Route path=\"/ClasstimeKiller/quiz/:id\">\r\n            <Quiz />\r\n          </Route>\r\n          <Route path=\"/ClasstimeKiller/done/:id\">\r\n            <TestDoneScreen />\r\n          </Route>\r\n          <Route path=\"/ClasstimeKiller/results/\">\r\n            <ResultsScreen />\r\n          </Route>\r\n        </Switch>\r\n      </Context.Provider>\r\n    </Router>\r\n  );\r\n}\r\nexport default React.memo(MainNavigator);\r\n","import { Provider } from \"react-redux\";\r\nimport { Profiler } from \"react\";\r\nimport store from \"./redux/store\";\r\nimport MainNavigator from \"./navigation/MainNavigator\";\r\n//import ImageComponent from \"./navigation/Image\";\r\n\r\nfunction App() {\r\n  const callback = (id, phase, actualTime, baseTime, startTime, commitTime) => {\r\n    // console.log(`${id}'s ${phase} phase:`);\r\n    // console.log(`Actual time: ${actualTime}`);\r\n    // console.log(`Base time: ${baseTime}`);\r\n    // console.log(`Start time: ${startTime}`);\r\n    // console.log(`Commit time: ${commitTime}`);\r\n  };\r\n  console.log(\"RENDER APP\");\r\n  return (\r\n    <Provider store={store}>\r\n      <Profiler id=\"Quizzes\" onRender={callback}>\r\n        <MainNavigator />\r\n      </Profiler>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"fontsource-roboto\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}